#cloud-config
hostname: {{ instance.name }}
fqdn: {{ instance.name }}.example.com
manage_etc_hosts: true
users:
  - name: sushi7
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: users, admin
    home: /home/sushi7
    shell: /bin/bash
    # TODO: For debugging purpose only, you can set the user's password as 'p@ssw0rd' by declaring `passwd` like below.
    #       You can also create new passwd manually by typing like below.
    #         openssl passwd -6 -salt xyz  yourpass
    #       See also: https://unix.stackexchange.com/questions/81240/manually-generate-password-for-etc-shadow
    #passwd: $6$xyz$rfUoxhnScmjOykLAVIhgfxmKgIWmTirRSrIZ9j5EJ1Vf765rQS.dCbXjXBx4PuhbcNNrXx2XpwUywQ96C7EJB/
    #lock_passwd: false
    ssh-authorized-keys:
      - {{ instance.ssh_public_key }}
# only cert auth via ssh (console access can still login)
ssh_pwauth: false
disable_root: false
chpasswd:
  list: |
    ubuntu:linux
  expire: False

package_update: true
packages:
  - qemu-guest-agent
# written to /var/log/cloud-init-output.log
final_message: "The system is finally up, after $UPTIME seconds"
# Create swap file only in dev environment
# https://cloudinit.readthedocs.io/en/latest/topics/examples.html
{% if 'swap' in group_vars.kvm.instances[instance.name] and 'size' in group_vars.kvm.instances[instance.name].swap -%}
swap:
  filename: /swap.img
  size: "auto"
  maxsize: {{ group_vars.kvm.instances[instance.name].swap.size }}
{%- endif %}

runcmd:
    pv_volume_name=$(pvdisplay /dev/vdb | grep -i "vg name" | awk '{print $3}')
    if [ "$pv_volume_name" = "cinder-volumes" ]; then
        echo "LVM physical volume \"cinder-volumes\" has already created. Skipped to create it." >&2
        return 0
    fi
    wipefs --all /dev/vdb
    dd if=/dev/zero of=/dev/vdb bs=8M count=128
    pvcreate /dev/vdb
    vgcreate cinder-volumes /dev/vdb

