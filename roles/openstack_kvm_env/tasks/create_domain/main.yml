---
# Declare variable in order to be convenience
- name: Declare instance variable for domain.yml
  set_fact:
    instance: "{{ item.value }}"

- name: Declare instance.name variable for domain.yml
  set_fact:
    instance: "{{ instance | combine( { 'name': item.key } ) }}"

- name: "Declare index of cloud_image to fetch the element from group_vars.cloud_images"
  set_fact:
    index_of_cloud_image: "{{ lookup('ansible.utils.index_of', group_vars.cloud_images, 'eq', instance.cloud_image_id, 'id') }}"

- name: Declare instance.cloud_image variable for downloading its image
  set_fact:
    instance: "{{ instance | combine( {'cloud_image': group_vars.cloud_iamges[index_of_cloud_image | int]} ) }}"

# List defined domains
- name: Get defined domains
  community.libvirt.virt:
    command: list_vms
  register: defined_domains

- include_tasks: create_and_run_domain.yml
  when: "instance.name not in defined_domains.list_vms"

# This instruction has commented out becuase default interface virbr0 is never used currently.
### Make network-default enabled
##- name: Make network-default enabled
##  ansible.builtin.script: ./enable_network_autostarted.sh
##  register: result_of_the_script
##  failed_when: ( result_of_the_script.rc != 0 )

# Start domain if the domain was already defined but not running.
# Domain was already existed and running if create_and_run_domain.yml was executed previously.
- name: Domain should be running
  community.libvirt.virt:
    name: "{{ instance.name }}"
    state: running

